package com.sina.parkingApplication.service.impl;import com.sina.parkingApplication.common.exception.NotFoundException;import com.sina.parkingApplication.model.Parking;import com.sina.parkingApplication.repository.ParkingRepository;import com.sina.parkingApplication.service.IParkingService;import lombok.AllArgsConstructor;import org.springframework.data.domain.Page;import org.springframework.data.domain.PageRequest;import org.springframework.data.domain.Sort;import org.springframework.stereotype.Service;import java.util.Optional;@AllArgsConstructor@Servicepublic class ParkingService implements IParkingService {    private final ParkingRepository parkingRepository;    @Override    public Parking addParking(Parking parking) {        return parkingRepository.save(parking);    }    @Override    public void deleteParking(Long parkingId) {        Parking parking = getParking(parkingId);        parkingRepository.delete(parking);    }    @Override    public Parking updateParking(Parking parking) {        Parking savedBefore = getParking(parking.getId());        savedBefore.setBasePrice(parking.getBasePrice());        return parkingRepository.save(savedBefore);    }    @Override    public Parking getParking(Long parkingId) {        Optional<Parking> optionalParking = parkingRepository.findById(parkingId);        if (optionalParking.isPresent()) {            return optionalParking.get();        }        throw new NotFoundException("parking not found");    }    @Override    public Page<Parking> paging(Integer page, Integer size) {        return parkingRepository.findAll(PageRequest.of(page, size, Sort.by("id").ascending()));    }}