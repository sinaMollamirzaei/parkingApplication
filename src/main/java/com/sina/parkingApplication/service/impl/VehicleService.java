package com.sina.parkingApplication.service.impl;import com.sina.parkingApplication.common.exception.NotFoundException;import com.sina.parkingApplication.model.Vehicle;import com.sina.parkingApplication.repository.VehicleRepository;import com.sina.parkingApplication.service.IParkingService;import com.sina.parkingApplication.service.IVehicleService;import lombok.AllArgsConstructor;import org.springframework.data.domain.Page;import org.springframework.data.domain.PageRequest;import org.springframework.data.domain.Sort;import org.springframework.stereotype.Service;import java.util.Optional;@AllArgsConstructor@Servicepublic class VehicleService implements IVehicleService {    private final VehicleRepository vehicleRepository;    private final IParkingService parkingService;    @Override    public Vehicle addVehicle(Vehicle vehicle) {        return vehicleRepository.save(vehicle);    }    @Override    public void deleteVehicle(Long vehicleId) {        Vehicle vehicle = getVehicle(vehicleId);        vehicleRepository.delete(vehicle);    }    @Override    public Vehicle updateVehicle(Vehicle vehicle) {        Vehicle savedBefore = getVehicle(vehicle.getId());        savedBefore.setPlateNumber(vehicle.getPlateNumber());        savedBefore.setCarClass(vehicle.getCarClass());        return vehicleRepository.save(savedBefore);    }    @Override    public Vehicle getVehicle(Long vehicleId) {        Optional<Vehicle> optionalVehicle = vehicleRepository.findById(vehicleId);        if (optionalVehicle.isPresent()) {            return optionalVehicle.get();        }        throw new NotFoundException("vehicle not found");    }    @Override    public Page<Vehicle> paging(Integer page, Integer size) {        return vehicleRepository.findAll(PageRequest.of(page, size, Sort.by("id").ascending()));    }}